package tela;

import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class jf_perguntas extends JFrame {
    ArrayList<String> perguntas_1 = new ArrayList();
    ArrayList<String> perguntas_2 = new ArrayList();
    ArrayList<String> perguntas_3 = new ArrayList();
    boolean adicionado=false, tentar1=true, tentar2=true, tentar3=true;
    String nivel = "1";
    String novo, velho;
    
    public jf_perguntas() {
        initComponents();
        super.setIconImage(new ImageIcon("icon.png").getImage());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        des_nv3 = new javax.swing.JRadioButton();
        des_nv2 = new javax.swing.JRadioButton();
        des_nv1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        tf_addDesafio = new javax.swing.JTextField();
        jb_adicionar = new javax.swing.JButton();
        jb_editar = new javax.swing.JButton();
        jb_excluir = new javax.swing.JButton();
        jb_addDesProntos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Jogo do Desafio -  Configurar Jogadores");
        setResizable(false);

        jPanel5.setPreferredSize(new java.awt.Dimension(500, 400));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Nível 1", "Nível 2", "Nível 3", "Todos" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Mostrar:");

        jTable1.setFont(new java.awt.Font("Arial", 0, 14));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nº", "Desafio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setInheritsPopupMenu(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(400);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel2.setForeground(new java.awt.Color(0, 102, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Desafios");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Adicionar Desafio"));

        buttonGroup1.add(des_nv3);
        des_nv3.setText("Nível 3");
        des_nv3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                des_nv3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(des_nv2);
        des_nv2.setText("Nível 2");
        des_nv2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                des_nv2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(des_nv1);
        des_nv1.setSelected(true);
        des_nv1.setText("Nível 1");
        des_nv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                des_nv1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Desafio:");

        tf_addDesafio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_addDesafioMouseClicked(evt);
            }
        });
        tf_addDesafio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_addDesafioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(des_nv1)
                .addGap(18, 18, 18)
                .addComponent(des_nv2)
                .addGap(18, 18, 18)
                .addComponent(des_nv3)
                .addGap(308, 308, 308))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(tf_addDesafio, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_addDesafio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(des_nv1)
                    .addComponent(des_nv2)
                    .addComponent(des_nv3)))
        );

        jb_adicionar.setText("Adicionar");
        jb_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_adicionarActionPerformed(evt);
            }
        });

        jb_editar.setText("Editar");
        jb_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_editarActionPerformed(evt);
            }
        });

        jb_excluir.setText("Excluir");
        jb_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_excluirActionPerformed(evt);
            }
        });

        jb_addDesProntos.setText("Adicionar Desafios Prontos");
        jb_addDesProntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addDesProntosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jb_addDesProntos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jb_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jb_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jb_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jb_adicionar, jb_editar, jb_excluir});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_adicionar)
                    .addComponent(jb_editar)
                    .addComponent(jb_excluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_addDesProntos)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_addDesafioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_addDesafioMouseClicked
        
}//GEN-LAST:event_tf_addDesafioMouseClicked

 
// Método que adiciona os Desafios já prontos
    public void adcDesafiosAuto(){
        if (adicionado==false){
//Níveis 1
        tentar1=false;
        
        perguntas_1.add("morder a bochecha");
        perguntas_1.add("morder a coxa");
        perguntas_1.add("morder");
        perguntas_1.add("beliscar barriga");
        perguntas_1.add("morder orelha");
        perguntas_1.add("abraçar");
        perguntas_1.add("beijar pescoço");
        perguntas_1.add("pergunta");
        perguntas_1.add("pegar no dedão do pé esquerdo");
        perguntas_1.add("pegar no dedão do pé direito");
        perguntas_1.add("beliscar a barriga");
        
//Níveis 2
        tentar2=false;
        
        perguntas_2.add("chupão no pescoço");
        perguntas_2.add("tirar uma peça de roupa");
        perguntas_2.add("chupão na barriga");
        perguntas_2.add("morder o pescoço");
        perguntas_2.add("selinho");
        perguntas_2.add("apertar a bunda");
        perguntas_2.add("pergunta");
        perguntas_2.add("acariciar o corpo");
        perguntas_2.add("lamber barriga");
        
//Níveis 3
        tentar3=false;

        perguntas_3.add("Faça o que quiser");
        perguntas_3.add("ser o ''garçom'' da vez");
        perguntas_3.add("dark room");
        perguntas_3.add("Acariciar 'x'");
        perguntas_3.add("beijar");
        perguntas_3.add("pegar no peito");
        perguntas_3.add("striptease (dança)");
        
        // 
        JOptionPane.showMessageDialog(null, "Desafios adicionados com sucesso!");
        adicionado=true;
        }
        else 
            JOptionPane.showMessageDialog(null, "Você já adicionou os desafios prontos!");
    }
    
    private void tf_addDesafioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_addDesafioActionPerformed

}//GEN-LAST:event_tf_addDesafioActionPerformed

    private void jb_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_adicionarActionPerformed
        AdcDesafios();
        preencher();
}//GEN-LAST:event_jb_adicionarActionPerformed

    
//Método que adiciona desafios     
    public void AdcDesafios(){  
        String tf_des = tf_addDesafio.getText();
    if (tf_des.equals("")){
        JOptionPane.showMessageDialog(null,"Digite algum desafio para adicionar");
    }
    else {
        if (des_nv1.isSelected()){
            perguntas_1.add(tf_des);
            JOptionPane.showMessageDialog(null,"Desafio Adicionado com sucesso:  '" + tf_des + "'");
            jComboBox1.setSelectedIndex(1);
        }
        else if (des_nv2.isSelected()){
            perguntas_2.add(tf_des);
            JOptionPane.showMessageDialog(null,"Desafio Adicionado com sucesso:  '" + tf_des + "'");
            jComboBox1.setSelectedIndex(2);
        }
        else if (des_nv3.isSelected()) {
            perguntas_3.add(tf_des);
            JOptionPane.showMessageDialog(null,"Desafio Adicionado com sucesso:  '" + tf_des + "'");
            jComboBox1.setSelectedIndex(3);    
        }
        else if (!des_nv1.isSelected() || !des_nv2.isSelected() || !des_nv3.isSelected() ){
            JOptionPane.showMessageDialog(null,"Selecione o nível que deseja adicionar este desafio");
        }
    }
    tf_addDesafio.setText("");
}
 
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        preencher();
}//GEN-LAST:event_jComboBox1ActionPerformed

    
// Método que seleciona o JRadioButton com o nível do desafio selecionado
    public void verificar_nivel(){
        if(perguntas_1.contains(velho)){
            des_nv1.setSelected(true);
            sel_niv("1");
        }
        else if (perguntas_2.contains(velho)){
            des_nv2.setSelected(true);
            sel_niv("2");
        }
        else if (perguntas_3.contains(velho)){
            des_nv3.setSelected(true);
            sel_niv("3");
        }
        else {
            
        }
    }
    
  
// Método que atualiza a tabela com os desafios    
    public void preencher(){
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(400);
        
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        modelo.setNumRows(0);
        
        if (jComboBox1.getSelectedItem().equals("Nível 1")){
            for(int i = 0; i<perguntas_1.size(); i++){
                modelo.addRow(new Object[]{i+1+"   ",perguntas_1.get(i)});
            }
        }
        
        else if (jComboBox1.getSelectedItem().equals("Nível 2")){
            for(int i = 0; i<perguntas_2.size(); i++){
                modelo.addRow(new Object[]{i+1+"   ",perguntas_2.get(i)});
            }
        }
        else  if (jComboBox1.getSelectedItem().equals("Nível 3")){
            for(int i = 0; i<perguntas_3.size(); i++){
                modelo.addRow(new Object[]{i+1+"   ",perguntas_3.get(i)});
            }
        }
        else if (jComboBox1.getSelectedItem().equals("Todos")){
            modelo.addRow(new Object[]{" ","        Desafios de Nível 1"});
            for(int i = 0; i<perguntas_1.size(); i++){
                modelo.addRow(new Object[]{i+1+"   ",perguntas_1.get(i)});
            }
            modelo.addRow(new Object[]{" "," "});
            modelo.addRow(new Object[]{" ","        Desafios de Nível 2"});
            for(int i = 0; i<perguntas_2.size(); i++){
                modelo.addRow(new Object[]{i+1+"   ",perguntas_2.get(i)});
            }
            modelo.addRow(new Object[]{" "," "});
            modelo.addRow(new Object[]{" ","        Desafios de Nível 3"});
            for(int i = 0; i<perguntas_3.size(); i++){
                modelo.addRow(new Object[]{i+1+"   ",perguntas_3.get(i)});
            }
        }
    }
                
        
    
// Botão que atualiza a tabela    
// Método que capta os dados da célula clicada na tabela  
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int linha = jTable1.getSelectedRow();  
        int coluna = jTable1.getSelectedColumn();
        velho = String.valueOf(jTable1.getValueAt(linha,coluna));
        tf_addDesafio.setText(velho);
        verificar_nivel();
    }//GEN-LAST:event_jTable1MouseClicked

    
// Botão que edita os desafios    
    private void jb_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_editarActionPerformed
        try{
        novo = tf_addDesafio.getText();
        if(nivel.equals("1")){
            int i = perguntas_1.indexOf(velho);
            perguntas_1.set(i,novo);
        }
        if(nivel.equals("2")){
            int i = perguntas_2.indexOf(velho);
            perguntas_2.set(i,novo);
        }
        if(nivel.equals("3")){
            int i = perguntas_3.indexOf(velho);
            perguntas_3.set(i,novo);
        }
        preencher();
        }
        catch(ArrayIndexOutOfBoundsException erro){
        }
    }//GEN-LAST:event_jb_editarActionPerformed

    
// Botão que exclui os desafios
    private void jb_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_excluirActionPerformed
    deletar();
    tf_addDesafio.setText("");
    tf_addDesafio.requestFocus();
    }//GEN-LAST:event_jb_excluirActionPerformed

    
// Método que deleta Desafios
    public void deletar(){
        if (nivel.equals("1")){
            if(perguntas_1.contains(velho)){
                perguntas_1.remove(velho);
                preencher();
            }
        }
        else if (nivel.equals("2")){
            if(perguntas_2.contains(velho)){
                perguntas_2.remove(velho);
                preencher();
            }        
        }
        else if (nivel.equals("3")){
            if(perguntas_3.contains(velho)){
                perguntas_3.remove(velho);
                preencher();
            }
        }
        else JOptionPane.showMessageDialog(null, "Desafio não encontrado.");
        }
    
// Método que seleciona o Nível    
    public void sel_niv(String selecao){
        nivel = selecao;
    }
    
    private void des_nv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_des_nv1ActionPerformed
    sel_niv("1");   
    }//GEN-LAST:event_des_nv1ActionPerformed

    private void des_nv2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_des_nv2ActionPerformed
     sel_niv("2");   // TODO add your handling code here:
    }//GEN-LAST:event_des_nv2ActionPerformed

    private void des_nv3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_des_nv3ActionPerformed
    sel_niv("3");
    }//GEN-LAST:event_des_nv3ActionPerformed

    private void jb_addDesProntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addDesProntosActionPerformed
    adcDesafiosAuto();
    preencher();
    jComboBox1.setSelectedIndex(4);
    }//GEN-LAST:event_jb_addDesProntosActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
    }//GEN-LAST:event_jTable1FocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new jf_perguntas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton des_nv1;
    private javax.swing.JRadioButton des_nv2;
    private javax.swing.JRadioButton des_nv3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jb_addDesProntos;
    private javax.swing.JButton jb_adicionar;
    private javax.swing.JButton jb_editar;
    private javax.swing.JButton jb_excluir;
    private javax.swing.JTextField tf_addDesafio;
    // End of variables declaration//GEN-END:variables
}
